"use strict";var cookieManager=(function(){if(typeof console==="undefined"){console={log:function(){},info:function(){},debug:function(){},warn:function(){},error:function(){}};}
var defaultConfig={"delete-undefined-cookies":true,"default-cookie-path":"/","user-preference-cookie-name":"user-preferences","user-preference-cookie-secure":false,"user-preference-cookie-expiry-days":365,"user-preference-configuration-form-id":false,"user-preference-saved-callback":false,"cookie-banner-id":false,"cookie-banner-accept-all-id":"cookie-banner-accept-all","cookie-banner-visible-on-page-with-preference-form":true,"cookie-manifest":[]};var init=function(customConfig){var configuration=defaultConfig;for(var item in customConfig){configuration[item]=customConfig[item];}
console.debug(configuration);manageCookies(configuration);if(document.addEventListener){document.addEventListener('DOMContentLoaded',function(){findAndBindCookieBanner(configuration);findAndBindPreferencesForm(configuration);});}};var manageCookies=function(configuration){var cm_cookie=configuration['user-preference-cookie-name'];var cm_user_preferences=getUserPreferences(cm_cookie);if(!cm_user_preferences){console.info('User preference cookie is not set or valid. '+'This cookie defines user preferences. '+'Assuming non-consent, and deleting all non-essential cookies if config allows.');}
var current_cookies=decodeURIComponent(document.cookie).split(';');if(current_cookies.length===1&&current_cookies[0].match(/^ *$/)){return;}
for(var i=0;i<current_cookies.length;i++){var cookie_name=current_cookies[i].split(/=(.*)/)[0].trim();if(cookie_name===cm_cookie){continue;}
var cookie_category=getCookieCategoryFromManifest(cookie_name,configuration);if(cookie_category===false){if(configuration['delete-undefined-cookies']){console.info("Cookie "+cookie_name+" is not in the manifest and delete-undefined-cookies is enabled; deleting.");deleteCookie(configuration,cookie_name);}else{console.info("Cookie "+cookie_name+" is not in the manifest and delete-undefined-cookies is disabled; skipping.");}
continue;}
if(cookie_category['optional']===false){console.debug("Cookie "+cookie_name+" is marked as non-optional; skipping.");continue;}
if(!cm_user_preferences||cm_user_preferences.hasOwnProperty(cookie_category['category-name'])===false){console.info("Cookie "+cookie_name+" is listed  Cannot find category "+cookie_category['category-name']+" in user preference cookie "+cm_cookie+"; assuming non-consent; deleting.");deleteCookie(configuration,cookie_name);continue;}
if(cm_user_preferences[cookie_category['category-name']]==='off'){console.info("Cookie "+cookie_name+" is listed under category "+cookie_category['category-name']+"; user preferences opts out of this category; deleting.");deleteCookie(configuration,cookie_name);continue;}
console.info("Cookie "+cookie_name+" is listed under category "+cookie_category['category-name']+"; user preferences opts in-to this category; cleared for use.");}
console.debug("Finishing processing all cookies.");};var getUserPreferences=function(cm_cookie){var cookie=getCookie(cm_cookie);if(!cookie){return false;}
try{return JSON.parse(cookie);}catch(e){console.error("Unable to parse user preference cookie "+cm_cookie+" as JSON.",e);return false;}};var getCookieCategoryFromManifest=function(cookie_name,configuration){var cookie_manifest=configuration['cookie-manifest'];for(var i=0;i<cookie_manifest.length;i++){var category_cookies=cookie_manifest[i]['cookies'];for(var x=0;x<category_cookies.length;x++){var cookie_prefix=category_cookies[x];if(cookie_name.indexOf(cookie_prefix)===0){console.debug("Cookie "+cookie_name+" found in manifest.");return cookie_manifest[i];}}}
console.debug("Cookie "+cookie_name+" NOT found in manifest.");return false;};var getCookie=function(cookie_name){var name=cookie_name+"=";var decoded_cookie=decodeURIComponent(document.cookie);var cookie_array=decoded_cookie.split(';');for(var i=0;i<cookie_array.length;i++){var cookie_part=cookie_array[i];while(cookie_part.charAt(0)===' '){cookie_part=cookie_part.substring(1);}
if(cookie_part.indexOf(name)===0){return cookie_part.substring(name.length,cookie_part.length);}}
return false;};var getDomainSubset=function(url){return url.split(".").reduceRight(function(acc,val){var lastArrayValue=acc.slice(-1)[0];acc.push(val+(lastArrayValue?'.'+lastArrayValue:""));return acc;},[]).slice(1);};var deleteCookie=function(configuration,cookie_name){var cookieNameAndExpires=cookie_name+'=; expires=Thu, 01 Jan 1970 00:00:01 GMT;';var path=configuration['default-cookie-path'];document.cookie=cookieNameAndExpires;getDomainSubset(window.location.hostname).map(function(url){document.cookie=cookieNameAndExpires+'domain='+url;document.cookie=cookieNameAndExpires+'path='+path;document.cookie=cookieNameAndExpires+'path='+path+'; domain='+url;})
console.debug("Deleted cookie "+cookie_name);};var setCookie=function(configuration,cookie_value){var cookie_name=configuration['user-preference-cookie-name'];var cookie_secure=configOptionIsTrue(configuration,'user-preference-cookie-secure');var cookie_expiry_days=365;if(configOptionIsNumeric(configuration,'user-preference-cookie-expiry-days')){cookie_expiry_days=configuration['user-preference-cookie-expiry-days'];}
var date=new Date();date.setTime(date.getTime()+(cookie_expiry_days*24*60*60*1000));var expires="expires="+date.toUTCString();var cookie_raw=cookie_name+"="+encodeURIComponent(cookie_value)+";"+expires+";path=/";if(cookie_secure){cookie_raw+=";secure";}
document.cookie=cookie_raw;};var findAndBindPreferencesForm=function(configuration){if(!configOptionIsString(configuration,'user-preference-configuration-form-id')){console.debug("Skipping binding to user cookie preference form.");return;}
if(document.readyState==='loading'){document.addEventListener('DOMContentLoaded',function(){findAndBindPreferencesForm(configuration);});console.debug("DOM is not ready; adding event to bind to form when ready.");return;}
var theForm=getForm(configuration);if(theForm!==null){theForm.addEventListener('submit',function(e){savePreferencesFromForm(e,configuration);manageCookies(configuration);checkShouldCookieBannerBeVisible(configuration);});console.debug("Found and bound to cookie preference form with ID "+configuration['user-preference-configuration-form-id']);}
setPreferencesInForm(configuration);};var getForm=function(configuration){return document.getElementById(configuration["user-preference-configuration-form-id"]);};var setPreferencesInForm=function(configuration){if(configOptionIsFalse(configuration,'set-checkboxes-in-preference-form')){console.log("Skipping set preferences in form");return;}
var theForm=getForm(configuration);if(theForm==null){return;}
var userPreferences=getUserPreferences(configuration['user-preference-cookie-name']);for(var category in userPreferences)
{var checkBoxes=theForm.querySelectorAll('input[name="'+category+'"]');for(var n=0;n<checkBoxes.length;n++){if(userPreferences.hasOwnProperty(category)){checkBoxes[n].checked=checkBoxes[n].value===userPreferences[category];}}}};var savePreferencesFromForm=function(event,configuration){event.preventDefault();console.debug('Saving user cookie preferences from Form...');var theForm=document.getElementById(configuration["user-preference-configuration-form-id"]);var radioInputs=theForm.querySelectorAll('input[type="radio"]:checked');var categories={};for(var i=0;i<radioInputs.length;i++){var node=radioInputs.item(i);var attr_name=node.getAttribute('name');var attr_value=node.getAttribute('value');console.log("Processing Radio: "+attr_name+" = "+attr_value,i);categories[node.getAttribute('name')]=node.getAttribute('value');}
savePreferences(configuration,categories);if(configuration['user-preference-saved-callback']!==false&&typeof configuration['user-preference-saved-callback']==='function'){configuration['user-preference-saved-callback']();}};var savePreferencesFromCookieBannerAcceptAll=function(event,configuration){event.preventDefault();console.debug('Saving user cookie preferences from Cookie Banner (accept all)...');var categories={};for(var i=0;i<configuration['cookie-manifest'].length;i++){var category=configuration['cookie-manifest'][i];if(category['optional']){categories[category['category-name']]='on';}}
savePreferences(configuration,categories);};var savePreferences=function(configuration,user_cookie_preferences){setCookie(configuration,JSON.stringify(user_cookie_preferences));console.debug('Saved user cookie preferences to cookie',getCookie(configuration['user-preference-cookie-name']));};var findAndBindCookieBanner=function(configuration){if(!configOptionIsString(configuration,'cookie-banner-id')&&!configOptionIsString(configuration,'cookie-banner-visibility-class')){console.debug('Skipping binding to cookie banner as both cookie-banner-id and cookie-banner-visibility-class are not defined');return;}
if(document.readyState==='loading'){document.addEventListener('DOMContentLoaded',function(){findAndBindCookieBanner(configuration);});console.debug('DOM is not ready; adding event to bind to cookie banner when ready.');return;}
var theBanner=document.getElementById(configuration['cookie-banner-id']);var acceptAllButton=document.getElementById(configuration['cookie-banner-accept-all-id']);if(theBanner!==null&&acceptAllButton!==null){acceptAllButton.addEventListener('click',function(e){savePreferencesFromCookieBannerAcceptAll(e,configuration);manageCookies(configuration);checkShouldCookieBannerBeVisible(configuration);});checkShouldCookieBannerBeVisible(configuration);}};var checkShouldCookieBannerBeVisible=function(configuration){var theBanner=document.getElementById(configuration['cookie-banner-id']);if(theBanner===null){console.error('Cannot work with cookie banner unless cookie-banner-id is configured.');return;}
var userPreferenceForm=document.getElementById(configuration['user-preference-configuration-form-id']);var visibleOnPreferencePage=configuration['cookie-banner-visible-on-page-with-preference-form'];if(userPreferenceForm!==null&&visibleOnPreferencePage===false){setBannerIsVisible(theBanner,false);return;}
var userPreferenceCookieName=configuration['user-preference-cookie-name'];if(getUserPreferences(userPreferenceCookieName)){setBannerIsVisible(theBanner,false);}else{setBannerIsVisible(theBanner,true);}};var setBannerIsVisible=function(bannerElement,isVisible){if(isVisible){if(bannerElement.hasAttribute("hidden")){bannerElement.removeAttribute("hidden");}
console.debug('Cookie banner was set to visible.');}else{if(!bannerElement.hasAttribute("hidden")){bannerElement.setAttribute("hidden",true);}
console.debug('Cookie banner was set to invisible.');}};var configOptionIsTrue=function(configuration,optionName){return configuration.hasOwnProperty(optionName)&&configuration[optionName]===true;};var configOptionIsFalse=function(configuration,optionName){if(configuration.hasOwnProperty(optionName)){return configuration[optionName]===false;}
return true;};var configOptionIsNumeric=function(configuration,optionName){return configuration.hasOwnProperty(optionName)&&!isNaN(configuration[optionName]);};var configOptionIsString=function(configuration,optionName){return configuration.hasOwnProperty(optionName)&&typeof configuration[optionName]==='string'&&configuration[optionName].trim()!=='';};var isCategoryOn=function(configuration,category){var userPreferences=getUserPreferences(configuration['user-preference-cookie-name']);return userPreferences&&userPreferences.hasOwnProperty(category)&&userPreferences[category].toUpperCase()==='ON';};return{init:init,isCategoryOn:isCategoryOn}})();